// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "bitmoiigson@gmail.com"
        },
        "license": {
            "name": "CC BY-NC-SA 4.0",
            "url": "https://creativecommons.org/licenses/by-nc-sa/4.0/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bidToken": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc20"
                ],
                "summary": "광고 스팟에 MOI 토큰을 입찰합니다.",
                "parameters": [
                    {
                        "description": "입찰 금액과 광고 스팟",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BidTokenRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ScoreResponse"
                        }
                    }
                }
            }
        },
        "/competition": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "경쟁모드에서 제공할 차트를 불러옵니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "제외할 USDT페어들을 쉼표로 구분하여 전달합니다.",
                        "name": "names",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OnePairChart"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "score"
                ],
                "summary": "경쟁모드에서 작성한 주문을 제출합니다.",
                "parameters": [
                    {
                        "description": "주문 정보",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ScoreRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ScoreResponse"
                        }
                    }
                }
            }
        },
        "/freeToken": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "erc20"
                ],
                "summary": "프리 MOI 토큰을 지급합니다.",
                "parameters": [
                    {
                        "description": "metamask 주소",
                        "name": "MetamaskAddressRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MetamaskAddressRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/highestBidder": {
            "get": {
                "tags": [
                    "erc20"
                ],
                "summary": "특정 광고 스팟에 가장 높은 가격을 제시한 입찰자를 반환합니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "광고 스팟",
                        "name": "location",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "최상위 입찰자",
                        "schema": {
                            "$ref": "#/definitions/api.HighestBidderResponse"
                        }
                    }
                }
            }
        },
        "/interval": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "다른 시간단위의 차트를 불러옵니다. 연습, 경쟁 두 모드 모두 지원합니다.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "identifier",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "competition",
                            "practice"
                        ],
                        "type": "string",
                        "name": "mode",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "5m",
                            "15m",
                            "1h",
                            "4h",
                            "1d"
                        ],
                        "type": "string",
                        "name": "reqinterval",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OnePairChart"
                        }
                    }
                }
            }
        },
        "/moreinfo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rank"
                ],
                "summary": "사용자가 랭크에 등재하며 기입한 추가 정보를 불러옵니다.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "score_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.PracScore"
                            }
                        }
                    }
                }
            }
        },
        "/myscore/{page}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "score"
                ],
                "summary": "사용자의 경쟁모드 주문 채결 내역을 불러옵니다.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "페이지 번호",
                        "name": "page",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.PracScore"
                            }
                        }
                    }
                }
            }
        },
        "/nextBidUnlock": {
            "get": {
                "tags": [
                    "erc20"
                ],
                "summary": "경매 마감 일자를 제공합니다.",
                "responses": {
                    "200": {
                        "description": "포멧된 일자",
                        "schema": {
                            "$ref": "#/definitions/api.NextUnlockResponse"
                        }
                    }
                }
            }
        },
        "/practice": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chart"
                ],
                "summary": "연습모드에서 제공할 차트를 불러옵니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "제외할 USDT페어들을 쉼표로 구분하여 전달합니다.",
                        "name": "names",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OnePairChart"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "score"
                ],
                "summary": "연습모드에서 작성한 주문을 제출합니다.",
                "parameters": [
                    {
                        "description": "주문 정보",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ScoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ScoreResponse"
                        }
                    }
                }
            }
        },
        "/rank": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rank"
                ],
                "summary": "사용자를 랭크에 등재합니다.",
                "parameters": [
                    {
                        "description": "랭크 등재 요청에 대한 정보",
                        "name": "rankInsertRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RankInsertRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/rank/{page}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rank"
                ],
                "summary": "랭크에 등재된 사용자들을 불러옵니다.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "페이지 번호",
                        "name": "page",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.RankingBoard"
                            }
                        }
                    }
                }
            }
        },
        "/reissueAccess": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "access token을 재발급 합니다.",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "ReissueAccessTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ReissueAccessTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ReissueAccessTokenResponse"
                        }
                    }
                }
            }
        },
        "/selectedBidder": {
            "get": {
                "tags": [
                    "erc20"
                ],
                "summary": "특정 광고 스팟의 입찰에 성공한 사용자를 불러옵니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "광고 스팟",
                        "name": "location",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "사용자와 입찰금액",
                        "schema": {
                            "$ref": "#/definitions/api.HighestBidderResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "사용자를 생성합니다.",
                "parameters": [
                    {
                        "description": "유저 생성 요청에 필요한 정보",
                        "name": "CreateUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/address": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "사용자의 Metamask 계좌를 업데이트 합니다.",
                "parameters": [
                    {
                        "description": "Metamask 주소",
                        "name": "LoginUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MetamaskAddressRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/checkId": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "ID 중복 여부를 확인합니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "체크할 ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/checkNickname": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "닉네임 중복 여부를 확인합니다.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "체크할 닉네임",
                        "name": "nickname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "사용자의 ID와 PW를 확인하여 토큰을 발급합니다.",
                "parameters": [
                    {
                        "description": "ID와 PW",
                        "name": "LoginUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginUserResponse"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "사용자의 프로필 이미지를 업데이트 합니다.",
                "parameters": [
                    {
                        "type": "file",
                        "description": "profile image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/verifyEmail": {
            "get": {
                "description": "Check nickname duplication",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Check nickname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nickname",
                        "name": "nickname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/verifyToken": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "발급했던 access token을 검증합니다.",
                "parameters": [
                    {
                        "description": "access token",
                        "name": "VerifyTokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VerifyTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.BidTokenRequest": {
            "type": "object",
            "required": [
                "amount",
                "location"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 1
                },
                "location": {
                    "type": "string",
                    "enum": [
                        "practice",
                        "rank",
                        "freetoken"
                    ]
                }
            }
        },
        "api.CandleData": {
            "type": "object",
            "properties": {
                "pdata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.PriceData"
                    }
                },
                "vdata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.VolumeData"
                    }
                }
            }
        },
        "api.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "nickname",
                "password",
                "user_id"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 1
                },
                "oauth_uid": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "user_id": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 5
                }
            }
        },
        "api.HighestBidderResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.LoginUserRequest": {
            "type": "object",
            "required": [
                "password",
                "user_id"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "user_id": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 5
                }
            }
        },
        "api.LoginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "refresh_token_expires_at": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.MetamaskAddressRequest": {
            "type": "object",
            "required": [
                "addr"
            ],
            "properties": {
                "addr": {
                    "type": "string"
                }
            }
        },
        "api.NextUnlockResponse": {
            "type": "object",
            "properties": {
                "next_unlock": {
                    "type": "string"
                }
            }
        },
        "api.OnePairChart": {
            "type": "object",
            "properties": {
                "btcratio": {
                    "type": "number"
                },
                "entry_price": {
                    "type": "number"
                },
                "entrytime": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "onechart": {
                    "$ref": "#/definitions/api.CandleData"
                }
            }
        },
        "api.OrderResult": {
            "type": "object",
            "properties": {
                "commission": {
                    "type": "number"
                },
                "end_price": {
                    "type": "number"
                },
                "entry_time": {
                    "type": "string"
                },
                "is_liquidated": {
                    "type": "boolean"
                },
                "leverage": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "out_time": {
                    "type": "integer"
                },
                "pnl": {
                    "type": "number"
                },
                "roe": {
                    "type": "number"
                }
            }
        },
        "api.PriceData": {
            "type": "object",
            "properties": {
                "close": {
                    "type": "number"
                },
                "high": {
                    "type": "number"
                },
                "low": {
                    "type": "number"
                },
                "open": {
                    "type": "number"
                },
                "time": {
                    "type": "integer"
                }
            }
        },
        "api.RankInsertRequest": {
            "type": "object",
            "required": [
                "score_id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "score_id": {
                    "type": "string"
                }
            }
        },
        "api.ReissueAccessTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "api.ReissueAccessTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/api.UserResponse"
                }
            }
        },
        "api.ScoreRequest": {
            "type": "object",
            "required": [
                "balance",
                "entry_price",
                "identifier",
                "is_long",
                "leverage",
                "mode",
                "name",
                "quantity",
                "score_id",
                "stage",
                "user_id",
                "waiting_term"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "entry_price": {
                    "type": "number"
                },
                "identifier": {
                    "type": "string"
                },
                "is_long": {
                    "type": "boolean"
                },
                "leverage": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "loss_price": {
                    "type": "number",
                    "minimum": 0
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "competition",
                        "practice"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "profit_price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity": {
                    "type": "number"
                },
                "score_id": {
                    "type": "string"
                },
                "stage": {
                    "type": "integer",
                    "maximum": 10,
                    "minimum": 1
                },
                "user_id": {
                    "type": "string"
                },
                "waiting_term": {
                    "type": "integer",
                    "maximum": 1,
                    "minimum": 1
                }
            }
        },
        "api.ScoreResponse": {
            "type": "object",
            "properties": {
                "origin_chart": {
                    "$ref": "#/definitions/api.CandleData"
                },
                "result_chart": {
                    "$ref": "#/definitions/api.CandleData"
                },
                "score": {
                    "$ref": "#/definitions/api.OrderResult"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "metamask_address": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password_changed_at": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.VerifyTokenRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "api.VolumeData": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "db.PracScore": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "endprice": {
                    "type": "number"
                },
                "entryprice": {
                    "type": "number"
                },
                "entrytime": {
                    "type": "string"
                },
                "leverage": {
                    "type": "integer"
                },
                "outtime": {
                    "type": "integer"
                },
                "pairname": {
                    "type": "string"
                },
                "pnl": {
                    "type": "number"
                },
                "position": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                },
                "remain_balance": {
                    "type": "number"
                },
                "roe": {
                    "type": "number"
                },
                "score_id": {
                    "type": "string"
                },
                "stage": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "db.RankingBoard": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "final_balance": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "score_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.bitmoi.co.kr",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Bitmoi API",
	Description:      "API for Bitmoi service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
