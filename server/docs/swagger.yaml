basePath: /
definitions:
  api.BidTokenRequest:
    properties:
      amount:
        minimum: 1
        type: integer
      location:
        enum:
        - practice
        - rank
        - freetoken
        type: string
    required:
    - amount
    - location
    type: object
  api.CandleData:
    properties:
      pdata:
        items:
          $ref: '#/definitions/api.PriceData'
        type: array
      vdata:
        items:
          $ref: '#/definitions/api.VolumeData'
        type: array
    type: object
  api.CreateUserRequest:
    properties:
      email:
        type: string
      nickname:
        maxLength: 10
        minLength: 1
        type: string
      oauth_uid:
        type: string
      password:
        minLength: 8
        type: string
      user_id:
        maxLength: 15
        minLength: 5
        type: string
    required:
    - email
    - nickname
    - password
    - user_id
    type: object
  api.HighestBidderResponse:
    properties:
      amount:
        type: integer
      user_id:
        type: string
    type: object
  api.LoginUserRequest:
    properties:
      password:
        minLength: 8
        type: string
      user_id:
        maxLength: 15
        minLength: 5
        type: string
    required:
    - password
    - user_id
    type: object
  api.LoginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.MetamaskAddressRequest:
    properties:
      addr:
        type: string
    required:
    - addr
    type: object
  api.NextUnlockResponse:
    properties:
      next_unlock:
        type: string
    type: object
  api.OnePairChart:
    properties:
      btcratio:
        type: number
      entry_price:
        type: number
      entrytime:
        type: string
      identifier:
        type: string
      name:
        type: string
      onechart:
        $ref: '#/definitions/api.CandleData'
    type: object
  api.OrderResult:
    properties:
      commission:
        type: number
      end_price:
        type: number
      entry_time:
        type: string
      is_liquidated:
        type: boolean
      leverage:
        type: integer
      name:
        type: string
      out_time:
        type: integer
      pnl:
        type: number
      roe:
        type: number
    type: object
  api.PriceData:
    properties:
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      time:
        type: integer
    type: object
  api.RankInsertRequest:
    properties:
      comment:
        type: string
      score_id:
        type: string
    required:
    - score_id
    type: object
  api.ReissueAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  api.ReissueAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.ScoreRequest:
    properties:
      balance:
        type: number
      entry_price:
        type: number
      identifier:
        type: string
      is_long:
        type: boolean
      leverage:
        maximum: 100
        minimum: 1
        type: integer
      loss_price:
        minimum: 0
        type: number
      mode:
        enum:
        - competition
        - practice
        type: string
      name:
        type: string
      profit_price:
        minimum: 0
        type: number
      quantity:
        type: number
      score_id:
        type: string
      stage:
        maximum: 10
        minimum: 1
        type: integer
      user_id:
        type: string
      waiting_term:
        maximum: 1
        minimum: 1
        type: integer
    required:
    - balance
    - entry_price
    - identifier
    - is_long
    - leverage
    - mode
    - name
    - quantity
    - score_id
    - stage
    - user_id
    - waiting_term
    type: object
  api.ScoreResponse:
    properties:
      origin_chart:
        $ref: '#/definitions/api.CandleData'
      result_chart:
        $ref: '#/definitions/api.CandleData'
      score:
        $ref: '#/definitions/api.OrderResult'
    type: object
  api.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      metamask_address:
        type: string
      nickname:
        type: string
      password_changed_at:
        type: string
      photo_url:
        type: string
      user_id:
        type: string
    type: object
  api.VerifyTokenRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  api.VolumeData:
    properties:
      color:
        type: string
      time:
        type: integer
      value:
        type: number
    type: object
  db.PracScore:
    properties:
      created_at:
        type: string
      endprice:
        type: number
      entryprice:
        type: number
      entrytime:
        type: string
      leverage:
        type: integer
      outtime:
        type: integer
      pairname:
        type: string
      pnl:
        type: number
      position:
        type: string
      quantity:
        type: number
      remain_balance:
        type: number
      roe:
        type: number
      score_id:
        type: string
      stage:
        type: integer
      user_id:
        type: string
    type: object
  db.RankingBoard:
    properties:
      comment:
        type: string
      created_at:
        type: string
      final_balance:
        type: number
      nickname:
        type: string
      photo_url:
        type: string
      score_id:
        type: string
      user_id:
        type: string
    type: object
host: api.bitmoi.co.kr
info:
  contact:
    email: bitmoiigson@gmail.com
    name: API Support
  description: API for Bitmoi service
  license:
    name: CC BY-NC-SA 4.0
    url: https://creativecommons.org/licenses/by-nc-sa/4.0/
  title: Bitmoi API
  version: "1.0"
paths:
  /bidToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: 입찰 금액과 광고 스팟
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.BidTokenRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ScoreResponse'
      summary: 광고 스팟에 MOI 토큰을 입찰합니다.
      tags:
      - erc20
  /competition:
    get:
      parameters:
      - description: 제외할 USDT페어들을 쉼표로 구분하여 전달합니다.
        in: query
        name: names
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OnePairChart'
      summary: 경쟁모드에서 제공할 차트를 불러옵니다.
      tags:
      - chart
    post:
      consumes:
      - application/json
      parameters:
      - description: 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/api.ScoreRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ScoreResponse'
      summary: 경쟁모드에서 작성한 주문을 제출합니다.
      tags:
      - score
  /freeToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: metamask 주소
        in: body
        name: MetamaskAddressRequest
        required: true
        schema:
          $ref: '#/definitions/api.MetamaskAddressRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 프리 MOI 토큰을 지급합니다.
      tags:
      - erc20
  /highestBidder:
    get:
      parameters:
      - description: 광고 스팟
        in: query
        name: location
        required: true
        type: string
      responses:
        "200":
          description: 최상위 입찰자
          schema:
            $ref: '#/definitions/api.HighestBidderResponse'
      summary: 특정 광고 스팟에 가장 높은 가격을 제시한 입찰자를 반환합니다.
      tags:
      - erc20
  /interval:
    get:
      parameters:
      - in: query
        name: identifier
        required: true
        type: string
      - enum:
        - competition
        - practice
        in: query
        name: mode
        required: true
        type: string
      - enum:
        - 5m
        - 15m
        - 1h
        - 4h
        - 1d
        in: query
        name: reqinterval
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OnePairChart'
      summary: 다른 시간단위의 차트를 불러옵니다. 연습, 경쟁 두 모드 모두 지원합니다.
      tags:
      - chart
  /moreinfo:
    get:
      parameters:
      - in: query
        name: score_id
        required: true
        type: string
      - in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.PracScore'
            type: array
      summary: 사용자가 랭크에 등재하며 기입한 추가 정보를 불러옵니다.
      tags:
      - rank
  /myscore/{page}:
    get:
      parameters:
      - description: 페이지 번호
        in: path
        name: page
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.PracScore'
            type: array
      summary: 사용자의 경쟁모드 주문 채결 내역을 불러옵니다.
      tags:
      - score
  /nextBidUnlock:
    get:
      responses:
        "200":
          description: 포멧된 일자
          schema:
            $ref: '#/definitions/api.NextUnlockResponse'
      summary: 경매 마감 일자를 제공합니다.
      tags:
      - erc20
  /practice:
    get:
      parameters:
      - description: 제외할 USDT페어들을 쉼표로 구분하여 전달합니다.
        in: query
        name: names
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.OnePairChart'
      summary: 연습모드에서 제공할 차트를 불러옵니다.
      tags:
      - chart
    post:
      consumes:
      - application/json
      parameters:
      - description: 주문 정보
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/api.ScoreRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ScoreResponse'
      summary: 연습모드에서 작성한 주문을 제출합니다.
      tags:
      - score
  /rank:
    post:
      parameters:
      - description: 랭크 등재 요청에 대한 정보
        in: body
        name: rankInsertRequest
        required: true
        schema:
          $ref: '#/definitions/api.RankInsertRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 사용자를 랭크에 등재합니다.
      tags:
      - rank
  /rank/{page}:
    get:
      parameters:
      - description: 페이지 번호
        in: path
        name: page
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.RankingBoard'
            type: array
      summary: 랭크에 등재된 사용자들을 불러옵니다.
      tags:
      - rank
  /reissueAccess:
    post:
      consumes:
      - application/json
      parameters:
      - description: refresh token
        in: body
        name: ReissueAccessTokenRequest
        required: true
        schema:
          $ref: '#/definitions/api.ReissueAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ReissueAccessTokenResponse'
      summary: access token을 재발급 합니다.
      tags:
      - user
  /selectedBidder:
    get:
      parameters:
      - description: 광고 스팟
        in: query
        name: location
        required: true
        type: string
      responses:
        "200":
          description: 사용자와 입찰금액
          schema:
            $ref: '#/definitions/api.HighestBidderResponse'
      summary: 특정 광고 스팟의 입찰에 성공한 사용자를 불러옵니다.
      tags:
      - erc20
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: 유저 생성 요청에 필요한 정보
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 사용자를 생성합니다.
      tags:
      - user
  /user/address:
    post:
      consumes:
      - application/json
      parameters:
      - description: Metamask 주소
        in: body
        name: LoginUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.MetamaskAddressRequest'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 사용자의 Metamask 계좌를 업데이트 합니다.
      tags:
      - user
  /user/checkId:
    get:
      parameters:
      - description: 체크할 ID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: ID 중복 여부를 확인합니다.
      tags:
      - user
  /user/checkNickname:
    get:
      parameters:
      - description: 체크할 닉네임
        in: query
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 닉네임 중복 여부를 확인합니다.
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID와 PW
        in: body
        name: LoginUserRequest
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginUserResponse'
      summary: 사용자의 ID와 PW를 확인하여 토큰을 발급합니다.
      tags:
      - user
  /user/profile:
    post:
      consumes:
      - application/json
      parameters:
      - description: profile image
        in: formData
        name: image
        required: true
        type: file
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: 사용자의 프로필 이미지를 업데이트 합니다.
      tags:
      - user
  /user/verifyEmail:
    get:
      description: Check nickname duplication
      parameters:
      - description: nickname
        in: query
        name: nickname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check nickname
      tags:
      - user
  /verifyToken:
    post:
      consumes:
      - application/json
      parameters:
      - description: access token
        in: body
        name: VerifyTokenRequest
        required: true
        schema:
          $ref: '#/definitions/api.VerifyTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
      summary: 발급했던 access token을 검증합니다.
      tags:
      - user
swagger: "2.0"
